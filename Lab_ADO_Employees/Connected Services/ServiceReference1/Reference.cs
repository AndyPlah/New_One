//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab_ADO_Employees.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyEmployee", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class MyEmployee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIdField, value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeCard", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class EmployeeCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardEmployeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardDepartment {
            get {
                return this.CardDepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.CardDepartmentField, value) != true)) {
                    this.CardDepartmentField = value;
                    this.RaisePropertyChanged("CardDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardEmployeeName {
            get {
                return this.CardEmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardEmployeeNameField, value) != true)) {
                    this.CardEmployeeNameField = value;
                    this.RaisePropertyChanged("CardEmployeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardPhone {
            get {
                return this.CardPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CardPhoneField, value) != true)) {
                    this.CardPhoneField = value;
                    this.RaisePropertyChanged("CardPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardPhoto {
            get {
                return this.CardPhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.CardPhotoField, value) != true)) {
                    this.CardPhotoField = value;
                    this.RaisePropertyChanged("CardPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardPosition {
            get {
                return this.CardPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardPositionField, value) != true)) {
                    this.CardPositionField = value;
                    this.RaisePropertyChanged("CardPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyDepartment", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class MyDepartment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDdepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Head {
            get {
                return this.HeadField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadField, value) != true)) {
                    this.HeadField = value;
                    this.RaisePropertyChanged("Head");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDdep {
            get {
                return this.IDdepField;
            }
            set {
                if ((object.ReferenceEquals(this.IDdepField, value) != true)) {
                    this.IDdepField = value;
                    this.RaisePropertyChanged("IDdep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomNumber {
            get {
                return this.RoomNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNumberField, value) != true)) {
                    this.RoomNumberField = value;
                    this.RaisePropertyChanged("RoomNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentCard", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class DepartmentCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardDepNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardDepPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardDepPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardDepName {
            get {
                return this.CardDepNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardDepNameField, value) != true)) {
                    this.CardDepNameField = value;
                    this.RaisePropertyChanged("CardDepName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardDepPhoto {
            get {
                return this.CardDepPhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.CardDepPhotoField, value) != true)) {
                    this.CardDepPhotoField = value;
                    this.RaisePropertyChanged("CardDepPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardDepPosition {
            get {
                return this.CardDepPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardDepPositionField, value) != true)) {
                    this.CardDepPositionField = value;
                    this.RaisePropertyChanged("CardDepPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyFullEmployee", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class MyFullEmployee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FDepIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FPosIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FAge {
            get {
                return this.FAgeField;
            }
            set {
                if ((this.FAgeField.Equals(value) != true)) {
                    this.FAgeField = value;
                    this.RaisePropertyChanged("FAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FDepId {
            get {
                return this.FDepIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FDepIdField, value) != true)) {
                    this.FDepIdField = value;
                    this.RaisePropertyChanged("FDepId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FId {
            get {
                return this.FIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FIdField, value) != true)) {
                    this.FIdField = value;
                    this.RaisePropertyChanged("FId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FName {
            get {
                return this.FNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FNameField, value) != true)) {
                    this.FNameField = value;
                    this.RaisePropertyChanged("FName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FPassport {
            get {
                return this.FPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.FPassportField, value) != true)) {
                    this.FPassportField = value;
                    this.RaisePropertyChanged("FPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FPhone {
            get {
                return this.FPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.FPhoneField, value) != true)) {
                    this.FPhoneField = value;
                    this.RaisePropertyChanged("FPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FPhoto {
            get {
                return this.FPhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.FPhotoField, value) != true)) {
                    this.FPhotoField = value;
                    this.RaisePropertyChanged("FPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FPosId {
            get {
                return this.FPosIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FPosIdField, value) != true)) {
                    this.FPosIdField = value;
                    this.RaisePropertyChanged("FPosId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyPosition", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class MyPosition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PosTariffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PosTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PosId {
            get {
                return this.PosIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PosIdField, value) != true)) {
                    this.PosIdField = value;
                    this.RaisePropertyChanged("PosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PosTariff {
            get {
                return this.PosTariffField;
            }
            set {
                if ((this.PosTariffField.Equals(value) != true)) {
                    this.PosTariffField = value;
                    this.RaisePropertyChanged("PosTariff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PosTitle {
            get {
                return this.PosTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.PosTitleField, value) != true)) {
                    this.PosTitleField = value;
                    this.RaisePropertyChanged("PosTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MySalary", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class MySalary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AwardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmplNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalEmpIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TariffForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Award {
            get {
                return this.AwardField;
            }
            set {
                if ((this.AwardField.Equals(value) != true)) {
                    this.AwardField = value;
                    this.RaisePropertyChanged("Award");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmplName {
            get {
                return this.EmplNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmplNameField, value) != true)) {
                    this.EmplNameField = value;
                    this.RaisePropertyChanged("EmplName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Hours {
            get {
                return this.HoursField;
            }
            set {
                if ((this.HoursField.Equals(value) != true)) {
                    this.HoursField = value;
                    this.RaisePropertyChanged("Hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalEmpId {
            get {
                return this.SalEmpIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SalEmpIdField, value) != true)) {
                    this.SalEmpIdField = value;
                    this.RaisePropertyChanged("SalEmpId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TariffFor {
            get {
                return this.TariffForField;
            }
            set {
                if ((this.TariffForField.Equals(value) != true)) {
                    this.TariffForField = value;
                    this.RaisePropertyChanged("TariffFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyStaffTable", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class MyStaffTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdPosForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepFor {
            get {
                return this.DepForField;
            }
            set {
                if ((object.ReferenceEquals(this.DepForField, value) != true)) {
                    this.DepForField = value;
                    this.RaisePropertyChanged("DepFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdPosFor {
            get {
                return this.IdPosForField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPosForField, value) != true)) {
                    this.IdPosForField = value;
                    this.RaisePropertyChanged("IdPosFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Now {
            get {
                return this.NowField;
            }
            set {
                if ((this.NowField.Equals(value) != true)) {
                    this.NowField = value;
                    this.RaisePropertyChanged("Now");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionFor {
            get {
                return this.PositionForField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionForField, value) != true)) {
                    this.PositionForField = value;
                    this.RaisePropertyChanged("PositionFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyVacancy", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class MyVacancy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VacDepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VacTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VacDep {
            get {
                return this.VacDepField;
            }
            set {
                if ((object.ReferenceEquals(this.VacDepField, value) != true)) {
                    this.VacDepField = value;
                    this.RaisePropertyChanged("VacDep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VacTitle {
            get {
                return this.VacTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.VacTitleField, value) != true)) {
                    this.VacTitleField = value;
                    this.RaisePropertyChanged("VacTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyLogin", Namespace="http://schemas.datacontract.org/2004/07/WCF_WEB_LAB_Server")]
    [System.SerializableAttribute()]
    public partial class MyLogin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginId {
            get {
                return this.LoginIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIdField, value) != true)) {
                    this.LoginIdField = value;
                    this.RaisePropertyChanged("LoginId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetArray", ReplyAction="http://tempuri.org/IService1/GetArrayResponse")]
        byte[] GetArray(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetArray", ReplyAction="http://tempuri.org/IService1/GetArrayResponse")]
        System.Threading.Tasks.Task<byte[]> GetArrayAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployees", ReplyAction="http://tempuri.org/IService1/GetEmployeesResponse")]
        Lab_ADO_Employees.ServiceReference1.MyEmployee[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployees", ReplyAction="http://tempuri.org/IService1/GetEmployeesResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyEmployee[]> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeCard", ReplyAction="http://tempuri.org/IService1/GetEmployeeCardResponse")]
        Lab_ADO_Employees.ServiceReference1.EmployeeCard GetEmployeeCard(string IDText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeCard", ReplyAction="http://tempuri.org/IService1/GetEmployeeCardResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.EmployeeCard> GetEmployeeCardAsync(string IDText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchEmployee", ReplyAction="http://tempuri.org/IService1/SearchEmployeeResponse")]
        Lab_ADO_Employees.ServiceReference1.MyEmployee SearchEmployee(string num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchEmployee", ReplyAction="http://tempuri.org/IService1/SearchEmployeeResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyEmployee> SearchEmployeeAsync(string num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDepartments", ReplyAction="http://tempuri.org/IService1/GetDepartmentsResponse")]
        Lab_ADO_Employees.ServiceReference1.MyDepartment[] GetDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDepartments", ReplyAction="http://tempuri.org/IService1/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyDepartment[]> GetDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDepsID", ReplyAction="http://tempuri.org/IService1/GetDepsIDResponse")]
        string[] GetDepsID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDepsID", ReplyAction="http://tempuri.org/IService1/GetDepsIDResponse")]
        System.Threading.Tasks.Task<string[]> GetDepsIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPosID", ReplyAction="http://tempuri.org/IService1/GetPosIDResponse")]
        string[] GetPosID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPosID", ReplyAction="http://tempuri.org/IService1/GetPosIDResponse")]
        System.Threading.Tasks.Task<string[]> GetPosIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDepartmentCard", ReplyAction="http://tempuri.org/IService1/GetDepartmentCardResponse")]
        Lab_ADO_Employees.ServiceReference1.DepartmentCard[] GetDepartmentCard(string IDText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDepartmentCard", ReplyAction="http://tempuri.org/IService1/GetDepartmentCardResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.DepartmentCard[]> GetDepartmentCardAsync(string IDText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEmployee", ReplyAction="http://tempuri.org/IService1/DeleteEmployeeResponse")]
        void DeleteEmployee(string empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEmployee", ReplyAction="http://tempuri.org/IService1/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task DeleteEmployeeAsync(string empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEmployee", ReplyAction="http://tempuri.org/IService1/AddEmployeeResponse")]
        void AddEmployee(Lab_ADO_Employees.ServiceReference1.MyFullEmployee fullemployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEmployee", ReplyAction="http://tempuri.org/IService1/AddEmployeeResponse")]
        System.Threading.Tasks.Task AddEmployeeAsync(Lab_ADO_Employees.ServiceReference1.MyFullEmployee fullemployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFullEmployee", ReplyAction="http://tempuri.org/IService1/GetFullEmployeeResponse")]
        Lab_ADO_Employees.ServiceReference1.MyFullEmployee GetFullEmployee(string Idstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFullEmployee", ReplyAction="http://tempuri.org/IService1/GetFullEmployeeResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyFullEmployee> GetFullEmployeeAsync(string Idstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditEmployee", ReplyAction="http://tempuri.org/IService1/EditEmployeeResponse")]
        void EditEmployee(Lab_ADO_Employees.ServiceReference1.MyFullEmployee fullemployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditEmployee", ReplyAction="http://tempuri.org/IService1/EditEmployeeResponse")]
        System.Threading.Tasks.Task EditEmployeeAsync(Lab_ADO_Employees.ServiceReference1.MyFullEmployee fullemployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddDepartment", ReplyAction="http://tempuri.org/IService1/AddDepartmentResponse")]
        void AddDepartment(Lab_ADO_Employees.ServiceReference1.MyDepartment dep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddDepartment", ReplyAction="http://tempuri.org/IService1/AddDepartmentResponse")]
        System.Threading.Tasks.Task AddDepartmentAsync(Lab_ADO_Employees.ServiceReference1.MyDepartment dep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteDepartment", ReplyAction="http://tempuri.org/IService1/DeleteDepartmentResponse")]
        void DeleteDepartment(string depId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteDepartment", ReplyAction="http://tempuri.org/IService1/DeleteDepartmentResponse")]
        System.Threading.Tasks.Task DeleteDepartmentAsync(string depId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditDepartment", ReplyAction="http://tempuri.org/IService1/EditDepartmentResponse")]
        void EditDepartment(Lab_ADO_Employees.ServiceReference1.MyDepartment dep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditDepartment", ReplyAction="http://tempuri.org/IService1/EditDepartmentResponse")]
        System.Threading.Tasks.Task EditDepartmentAsync(Lab_ADO_Employees.ServiceReference1.MyDepartment dep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeesByDepId", ReplyAction="http://tempuri.org/IService1/GetEmployeesByDepIdResponse")]
        int GetEmployeesByDepId(string depId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeesByDepId", ReplyAction="http://tempuri.org/IService1/GetEmployeesByDepIdResponse")]
        System.Threading.Tasks.Task<int> GetEmployeesByDepIdAsync(string depId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeesByPosId", ReplyAction="http://tempuri.org/IService1/GetEmployeesByPosIdResponse")]
        int GetEmployeesByPosId(string posId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeesByPosId", ReplyAction="http://tempuri.org/IService1/GetEmployeesByPosIdResponse")]
        System.Threading.Tasks.Task<int> GetEmployeesByPosIdAsync(string posId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPositions", ReplyAction="http://tempuri.org/IService1/GetPositionsResponse")]
        Lab_ADO_Employees.ServiceReference1.MyPosition[] GetPositions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPositions", ReplyAction="http://tempuri.org/IService1/GetPositionsResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyPosition[]> GetPositionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditPosition", ReplyAction="http://tempuri.org/IService1/EditPositionResponse")]
        void EditPosition(Lab_ADO_Employees.ServiceReference1.MyPosition pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditPosition", ReplyAction="http://tempuri.org/IService1/EditPositionResponse")]
        System.Threading.Tasks.Task EditPositionAsync(Lab_ADO_Employees.ServiceReference1.MyPosition pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSalary", ReplyAction="http://tempuri.org/IService1/GetSalaryResponse")]
        Lab_ADO_Employees.ServiceReference1.MySalary[] GetSalary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSalary", ReplyAction="http://tempuri.org/IService1/GetSalaryResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MySalary[]> GetSalaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSalary", ReplyAction="http://tempuri.org/IService1/EditSalaryResponse")]
        void EditSalary(Lab_ADO_Employees.ServiceReference1.MySalary sal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSalary", ReplyAction="http://tempuri.org/IService1/EditSalaryResponse")]
        System.Threading.Tasks.Task EditSalaryAsync(Lab_ADO_Employees.ServiceReference1.MySalary sal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAvgSalary", ReplyAction="http://tempuri.org/IService1/GetAvgSalaryResponse")]
        double GetAvgSalary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAvgSalary", ReplyAction="http://tempuri.org/IService1/GetAvgSalaryResponse")]
        System.Threading.Tasks.Task<double> GetAvgSalaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalSalary", ReplyAction="http://tempuri.org/IService1/GetTotalSalaryResponse")]
        double GetTotalSalary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalSalary", ReplyAction="http://tempuri.org/IService1/GetTotalSalaryResponse")]
        System.Threading.Tasks.Task<double> GetTotalSalaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStaffTable", ReplyAction="http://tempuri.org/IService1/GetStaffTableResponse")]
        Lab_ADO_Employees.ServiceReference1.MyStaffTable[] GetStaffTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStaffTable", ReplyAction="http://tempuri.org/IService1/GetStaffTableResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyStaffTable[]> GetStaffTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStaff", ReplyAction="http://tempuri.org/IService1/AddStaffResponse")]
        void AddStaff(Lab_ADO_Employees.ServiceReference1.MyStaffTable st);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStaff", ReplyAction="http://tempuri.org/IService1/AddStaffResponse")]
        System.Threading.Tasks.Task AddStaffAsync(Lab_ADO_Employees.ServiceReference1.MyStaffTable st);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPosition", ReplyAction="http://tempuri.org/IService1/AddPositionResponse")]
        void AddPosition(Lab_ADO_Employees.ServiceReference1.MyPosition pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPosition", ReplyAction="http://tempuri.org/IService1/AddPositionResponse")]
        System.Threading.Tasks.Task AddPositionAsync(Lab_ADO_Employees.ServiceReference1.MyPosition pos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStaff", ReplyAction="http://tempuri.org/IService1/DeleteStaffResponse")]
        void DeleteStaff(string staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStaff", ReplyAction="http://tempuri.org/IService1/DeleteStaffResponse")]
        System.Threading.Tasks.Task DeleteStaffAsync(string staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStaff", ReplyAction="http://tempuri.org/IService1/EditStaffResponse")]
        void EditStaff(Lab_ADO_Employees.ServiceReference1.MyStaffTable st);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStaff", ReplyAction="http://tempuri.org/IService1/EditStaffResponse")]
        System.Threading.Tasks.Task EditStaffAsync(Lab_ADO_Employees.ServiceReference1.MyStaffTable st);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVacancy", ReplyAction="http://tempuri.org/IService1/GetVacancyResponse")]
        Lab_ADO_Employees.ServiceReference1.MyVacancy[] GetVacancy();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVacancy", ReplyAction="http://tempuri.org/IService1/GetVacancyResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyVacancy[]> GetVacancyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVacancyByDepId", ReplyAction="http://tempuri.org/IService1/GetVacancyByDepIdResponse")]
        Lab_ADO_Employees.ServiceReference1.MyVacancy[] GetVacancyByDepId(string dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVacancyByDepId", ReplyAction="http://tempuri.org/IService1/GetVacancyByDepIdResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyVacancy[]> GetVacancyByDepIdAsync(string dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStaffByDepId", ReplyAction="http://tempuri.org/IService1/GetStaffByDepIdResponse")]
        Lab_ADO_Employees.ServiceReference1.MyStaffTable[] GetStaffByDepId(string dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStaffByDepId", ReplyAction="http://tempuri.org/IService1/GetStaffByDepIdResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyStaffTable[]> GetStaffByDepIdAsync(string dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLogin", ReplyAction="http://tempuri.org/IService1/GetLoginResponse")]
        Lab_ADO_Employees.ServiceReference1.MyLogin[] GetLogin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLogin", ReplyAction="http://tempuri.org/IService1/GetLoginResponse")]
        System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyLogin[]> GetLoginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckLogin", ReplyAction="http://tempuri.org/IService1/CheckLoginResponse")]
        int CheckLogin(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckLogin", ReplyAction="http://tempuri.org/IService1/CheckLoginResponse")]
        System.Threading.Tasks.Task<int> CheckLoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddLogin", ReplyAction="http://tempuri.org/IService1/AddLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://tempuri.org/IService1/AddLoginStringFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        void AddLogin(Lab_ADO_Employees.ServiceReference1.MyLogin log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddLogin", ReplyAction="http://tempuri.org/IService1/AddLoginResponse")]
        System.Threading.Tasks.Task AddLoginAsync(Lab_ADO_Employees.ServiceReference1.MyLogin log);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Lab_ADO_Employees.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Lab_ADO_Employees.ServiceReference1.IService1>, Lab_ADO_Employees.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] GetArray(string path) {
            return base.Channel.GetArray(path);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetArrayAsync(string path) {
            return base.Channel.GetArrayAsync(path);
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyEmployee[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyEmployee[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public Lab_ADO_Employees.ServiceReference1.EmployeeCard GetEmployeeCard(string IDText) {
            return base.Channel.GetEmployeeCard(IDText);
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.EmployeeCard> GetEmployeeCardAsync(string IDText) {
            return base.Channel.GetEmployeeCardAsync(IDText);
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyEmployee SearchEmployee(string num) {
            return base.Channel.SearchEmployee(num);
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyEmployee> SearchEmployeeAsync(string num) {
            return base.Channel.SearchEmployeeAsync(num);
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyDepartment[] GetDepartments() {
            return base.Channel.GetDepartments();
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyDepartment[]> GetDepartmentsAsync() {
            return base.Channel.GetDepartmentsAsync();
        }
        
        public string[] GetDepsID() {
            return base.Channel.GetDepsID();
        }
        
        public System.Threading.Tasks.Task<string[]> GetDepsIDAsync() {
            return base.Channel.GetDepsIDAsync();
        }
        
        public string[] GetPosID() {
            return base.Channel.GetPosID();
        }
        
        public System.Threading.Tasks.Task<string[]> GetPosIDAsync() {
            return base.Channel.GetPosIDAsync();
        }
        
        public Lab_ADO_Employees.ServiceReference1.DepartmentCard[] GetDepartmentCard(string IDText) {
            return base.Channel.GetDepartmentCard(IDText);
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.DepartmentCard[]> GetDepartmentCardAsync(string IDText) {
            return base.Channel.GetDepartmentCardAsync(IDText);
        }
        
        public void DeleteEmployee(string empId) {
            base.Channel.DeleteEmployee(empId);
        }
        
        public System.Threading.Tasks.Task DeleteEmployeeAsync(string empId) {
            return base.Channel.DeleteEmployeeAsync(empId);
        }
        
        public void AddEmployee(Lab_ADO_Employees.ServiceReference1.MyFullEmployee fullemployee) {
            base.Channel.AddEmployee(fullemployee);
        }
        
        public System.Threading.Tasks.Task AddEmployeeAsync(Lab_ADO_Employees.ServiceReference1.MyFullEmployee fullemployee) {
            return base.Channel.AddEmployeeAsync(fullemployee);
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyFullEmployee GetFullEmployee(string Idstr) {
            return base.Channel.GetFullEmployee(Idstr);
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyFullEmployee> GetFullEmployeeAsync(string Idstr) {
            return base.Channel.GetFullEmployeeAsync(Idstr);
        }
        
        public void EditEmployee(Lab_ADO_Employees.ServiceReference1.MyFullEmployee fullemployee) {
            base.Channel.EditEmployee(fullemployee);
        }
        
        public System.Threading.Tasks.Task EditEmployeeAsync(Lab_ADO_Employees.ServiceReference1.MyFullEmployee fullemployee) {
            return base.Channel.EditEmployeeAsync(fullemployee);
        }
        
        public void AddDepartment(Lab_ADO_Employees.ServiceReference1.MyDepartment dep) {
            base.Channel.AddDepartment(dep);
        }
        
        public System.Threading.Tasks.Task AddDepartmentAsync(Lab_ADO_Employees.ServiceReference1.MyDepartment dep) {
            return base.Channel.AddDepartmentAsync(dep);
        }
        
        public void DeleteDepartment(string depId) {
            base.Channel.DeleteDepartment(depId);
        }
        
        public System.Threading.Tasks.Task DeleteDepartmentAsync(string depId) {
            return base.Channel.DeleteDepartmentAsync(depId);
        }
        
        public void EditDepartment(Lab_ADO_Employees.ServiceReference1.MyDepartment dep) {
            base.Channel.EditDepartment(dep);
        }
        
        public System.Threading.Tasks.Task EditDepartmentAsync(Lab_ADO_Employees.ServiceReference1.MyDepartment dep) {
            return base.Channel.EditDepartmentAsync(dep);
        }
        
        public int GetEmployeesByDepId(string depId) {
            return base.Channel.GetEmployeesByDepId(depId);
        }
        
        public System.Threading.Tasks.Task<int> GetEmployeesByDepIdAsync(string depId) {
            return base.Channel.GetEmployeesByDepIdAsync(depId);
        }
        
        public int GetEmployeesByPosId(string posId) {
            return base.Channel.GetEmployeesByPosId(posId);
        }
        
        public System.Threading.Tasks.Task<int> GetEmployeesByPosIdAsync(string posId) {
            return base.Channel.GetEmployeesByPosIdAsync(posId);
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyPosition[] GetPositions() {
            return base.Channel.GetPositions();
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyPosition[]> GetPositionsAsync() {
            return base.Channel.GetPositionsAsync();
        }
        
        public void EditPosition(Lab_ADO_Employees.ServiceReference1.MyPosition pos) {
            base.Channel.EditPosition(pos);
        }
        
        public System.Threading.Tasks.Task EditPositionAsync(Lab_ADO_Employees.ServiceReference1.MyPosition pos) {
            return base.Channel.EditPositionAsync(pos);
        }
        
        public Lab_ADO_Employees.ServiceReference1.MySalary[] GetSalary() {
            return base.Channel.GetSalary();
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MySalary[]> GetSalaryAsync() {
            return base.Channel.GetSalaryAsync();
        }
        
        public void EditSalary(Lab_ADO_Employees.ServiceReference1.MySalary sal) {
            base.Channel.EditSalary(sal);
        }
        
        public System.Threading.Tasks.Task EditSalaryAsync(Lab_ADO_Employees.ServiceReference1.MySalary sal) {
            return base.Channel.EditSalaryAsync(sal);
        }
        
        public double GetAvgSalary() {
            return base.Channel.GetAvgSalary();
        }
        
        public System.Threading.Tasks.Task<double> GetAvgSalaryAsync() {
            return base.Channel.GetAvgSalaryAsync();
        }
        
        public double GetTotalSalary() {
            return base.Channel.GetTotalSalary();
        }
        
        public System.Threading.Tasks.Task<double> GetTotalSalaryAsync() {
            return base.Channel.GetTotalSalaryAsync();
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyStaffTable[] GetStaffTable() {
            return base.Channel.GetStaffTable();
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyStaffTable[]> GetStaffTableAsync() {
            return base.Channel.GetStaffTableAsync();
        }
        
        public void AddStaff(Lab_ADO_Employees.ServiceReference1.MyStaffTable st) {
            base.Channel.AddStaff(st);
        }
        
        public System.Threading.Tasks.Task AddStaffAsync(Lab_ADO_Employees.ServiceReference1.MyStaffTable st) {
            return base.Channel.AddStaffAsync(st);
        }
        
        public void AddPosition(Lab_ADO_Employees.ServiceReference1.MyPosition pos) {
            base.Channel.AddPosition(pos);
        }
        
        public System.Threading.Tasks.Task AddPositionAsync(Lab_ADO_Employees.ServiceReference1.MyPosition pos) {
            return base.Channel.AddPositionAsync(pos);
        }
        
        public void DeleteStaff(string staffId) {
            base.Channel.DeleteStaff(staffId);
        }
        
        public System.Threading.Tasks.Task DeleteStaffAsync(string staffId) {
            return base.Channel.DeleteStaffAsync(staffId);
        }
        
        public void EditStaff(Lab_ADO_Employees.ServiceReference1.MyStaffTable st) {
            base.Channel.EditStaff(st);
        }
        
        public System.Threading.Tasks.Task EditStaffAsync(Lab_ADO_Employees.ServiceReference1.MyStaffTable st) {
            return base.Channel.EditStaffAsync(st);
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyVacancy[] GetVacancy() {
            return base.Channel.GetVacancy();
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyVacancy[]> GetVacancyAsync() {
            return base.Channel.GetVacancyAsync();
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyVacancy[] GetVacancyByDepId(string dep_id) {
            return base.Channel.GetVacancyByDepId(dep_id);
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyVacancy[]> GetVacancyByDepIdAsync(string dep_id) {
            return base.Channel.GetVacancyByDepIdAsync(dep_id);
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyStaffTable[] GetStaffByDepId(string dep_id) {
            return base.Channel.GetStaffByDepId(dep_id);
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyStaffTable[]> GetStaffByDepIdAsync(string dep_id) {
            return base.Channel.GetStaffByDepIdAsync(dep_id);
        }
        
        public Lab_ADO_Employees.ServiceReference1.MyLogin[] GetLogin() {
            return base.Channel.GetLogin();
        }
        
        public System.Threading.Tasks.Task<Lab_ADO_Employees.ServiceReference1.MyLogin[]> GetLoginAsync() {
            return base.Channel.GetLoginAsync();
        }
        
        public int CheckLogin(string login, string password) {
            return base.Channel.CheckLogin(login, password);
        }
        
        public System.Threading.Tasks.Task<int> CheckLoginAsync(string login, string password) {
            return base.Channel.CheckLoginAsync(login, password);
        }
        
        public void AddLogin(Lab_ADO_Employees.ServiceReference1.MyLogin log) {
            base.Channel.AddLogin(log);
        }
        
        public System.Threading.Tasks.Task AddLoginAsync(Lab_ADO_Employees.ServiceReference1.MyLogin log) {
            return base.Channel.AddLoginAsync(log);
        }
    }
}
